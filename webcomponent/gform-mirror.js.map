{"version":3,"file":"gform-mirror.js","sources":["../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/internal/dom.js","../node_modules/svelte/src/runtime/internal/lifecycle.js","../node_modules/svelte/src/runtime/internal/scheduler.js","../node_modules/svelte/src/runtime/internal/transitions.js","../node_modules/svelte/src/runtime/internal/each.js","../node_modules/svelte/src/runtime/internal/Component.js","../node_modules/svelte/src/shared/version.js","../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../src/svelte/GForm/translations.ts","../src/svelte/GForm/translate.ts","../src/svelte/GForm/T.svelte","../src/svelte/GForm/TranslationSelector.svelte","../src/svelte/GForm/components/RatingItem.svelte","../src/svelte/GForm/GFormItem.svelte","../src/svelte/GForm/GPage.svelte","../src/svelte/GForm/GForm.svelte","../src/svelte/GForm/GFormMirror.svelte"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","export const builtInTranslations = {\n  en: {\n    \"This field is required\": \"This field is required\",\n    Submit: \"Submit\",\n    Submitting: \"Submitting\",\n    \"Submit another response\": \"Submit another response\",\n    \"Form submitted successfully!\": \"Form submitted successfully!\",\n    \"Click here to edit your response in Google Forms\":\n      \"Click here to edit your response in Google Forms\",\n    \"There was an error submitting the form.\":\n      \"There was an error submitting the form.\",\n    \"Complete in Google Forms\": \"Complete in Google Forms\",\n  },\n  es: {\n    \"This field is required\": \"Este campo es obligatorio\",\n    Submit: \"Enviar\",\n    Submitting: \"Enviando\",\n    \"Submit another response\": \"Enviar otra respuesta\",\n    \"Form submitted successfully!\": \"¡Formulario enviado con éxito!\",\n    \"Click here to edit your response in Google Forms\":\n      \"Haz clic aquí para editar tu respuesta en Google Forms\",\n    \"There was an error submitting the form.\":\n      \"Hubo un error al enviar el formulario.\",\n    \"Complete in Google Forms\": \"Completar en Google Forms\",\n  },\n  pt: {\n    \"This field is required\": \"Este campo é obrigatório\",\n    Submit: \"Enviar\",\n    Submitting: \"Enviando\",\n    \"Submit another response\": \"Enviar outra resposta\",\n    \"Form submitted successfully!\": \"Formulário enviado com sucesso!\",\n    \"Click here to edit your response in Google Forms\":\n      \"Clique aqui para editar sua resposta no Google Forms\",\n    \"There was an error submitting the form.\":\n      \"Houve um erro ao enviar o formulário.\",\n    \"Complete in Google Forms\": \"Concluir no Google Forms\",\n  },\n  km: {\n    \"This field is required\": \"វាលនេះត្រូវការជាតម្រូវការ\",\n    Submit: \"ដាក់ស្នើ\",\n    Submitting: \"កំពុងដាក់ស្នើ\",\n    \"Submit another response\": \"ដាក់ស្នើការឆ្លើយតបផ្សេងទៀត\",\n    \"Form submitted successfully!\": \"បំពេញបែបបទដោយជោគជ័យ!\",\n    \"Click here to edit your response in Google Forms\":\n      \"ចុចទីនេះដើម្បីកែសម្រួលការឆ្លើយតបរបស់អ្នកនៅក្នុង Google Forms\",\n    \"There was an error submitting the form.\": \"មានកំហុសក្នុងការដាក់ស្នើបែបបទ។\",\n    \"Complete in Google Forms\": \"បញ្ចប់ក្នុង Google Forms\",\n  },\n  fr: {\n    \"This field is required\": \"Ce champ est obligatoire\",\n    Submit: \"Soumettre\",\n    Submitting: \"Soumission en cours\",\n    \"Submit another response\": \"Soumettre une autre réponse\",\n    \"Form submitted successfully!\": \"Formulaire soumis avec succès !\",\n    \"Click here to edit your response in Google Forms\":\n      \"Cliquez ici pour modifier votre réponse dans Google Forms\",\n    \"There was an error submitting the form.\":\n      \"Une erreur s'est produite lors de la soumission du formulaire.\",\n    \"Complete in Google Forms\": \"Compléter dans Google Forms\",\n  },\n  de: {\n    \"This field is required\": \"Dieses Feld ist erforderlich\",\n    Submit: \"Einreichen\",\n    Submitting: \"Einreichen...\",\n    \"Submit another response\": \"Eine weitere Antwort einreichen\",\n    \"Form submitted successfully!\": \"Formular erfolgreich eingereicht!\",\n    \"Click here to edit your response in Google Forms\":\n      \"Klicken Sie hier, um Ihre Antwort in Google Forms zu bearbeiten\",\n    \"There was an error submitting the form.\":\n      \"Beim Einreichen des Formulars ist ein Fehler aufgetreten.\",\n    \"Complete in Google Forms\": \"In Google Forms ausfüllen\",\n  },\n  it: {\n    \"This field is required\": \"Questo campo è obbligatorio\",\n    Submit: \"Invia\",\n    Submitting: \"Invio in corso\",\n    \"Submit another response\": \"Invia un'altra risposta\",\n    \"Form submitted successfully!\": \"Modulo inviato con successo!\",\n    \"Click here to edit your response in Google Forms\":\n      \"Clicca qui per modificare la tua risposta su Google Forms\",\n    \"There was an error submitting the form.\":\n      \"Si è verificato un errore nell'invio del modulo.\",\n    \"Complete in Google Forms\": \"Completa in Google Forms\",\n  },\n  nl: {\n    \"This field is required\": \"Dit veld is verplicht\",\n    Submit: \"Verzenden\",\n    Submitting: \"Bezig met verzenden\",\n    \"Submit another response\": \"Nog een antwoord verzenden\",\n    \"Form submitted successfully!\": \"Formulier succesvol verzonden!\",\n    \"Click here to edit your response in Google Forms\":\n      \"Klik hier om uw antwoord in Google Forms te bewerken\",\n    \"There was an error submitting the form.\":\n      \"Er is een fout opgetreden bij het verzenden van het formulier.\",\n    \"Complete in Google Forms\": \"Voltooien in Google Forms\",\n  },\n  ru: {\n    \"This field is required\": \"Это поле обязательно для заполнения\",\n    Submit: \"Отправить\",\n    Submitting: \"Отправка...\",\n    \"Submit another response\": \"Отправить другой ответ\",\n    \"Form submitted successfully!\": \"Форма успешно отправлена!\",\n    \"Click here to edit your response in Google Forms\":\n      \"Нажмите здесь, чтобы изменить ваш ответ в Google Forms\",\n    \"There was an error submitting the form.\":\n      \"Произошла ошибка при отправке формы.\",\n    \"Complete in Google Forms\": \"Завершить в Google Forms\",\n  },\n  zh: {\n    \"This field is required\": \"此字段为必填项\",\n    Submit: \"提交\",\n    Submitting: \"正在提交...\",\n    \"Submit another response\": \"提交另一个回应\",\n    \"Form submitted successfully!\": \"表单提交成功！\",\n    \"Click here to edit your response in Google Forms\":\n      \"点击此处编辑您的 Google Forms 回应\",\n    \"There was an error submitting the form.\": \"提交表单时发生错误。\",\n    \"Complete in Google Forms\": \"在 Google Forms 中完成\",\n  },\n};\n","import type { Translations } from \"../../gas/types\";\nimport { builtInTranslations } from \"./translations\";\n\nexport const getText = (\n  word: string,\n  translations: Translations,\n  lang: string = \"en\"\n) => {\n  if (translations[lang] && translations[lang][word]) {\n    return translations[lang][word];\n  } else if (builtInTranslations[lang] && builtInTranslations[lang][word]) {\n    return builtInTranslations[lang][word];\n  } else {\n    return word;\n  }\n};\n","<script lang=\"ts\">\n  import type { Translations } from \"./../../gas/types.ts\";\n  import { getText } from \"./translate.js\";\n\n  export let text;\n  export let lang = \"en\";\n  export let translations: Translations = {};\n  let translatedText = text;\n  let haveTranslation = false;\n\n  $: {\n    haveTranslation = !!(translations[lang] && translations[lang][text]);\n    translatedText = getText(text, translations, lang);\n  }\n</script>\n\n<span data-original-text={text} class:notranslate={haveTranslation}>\n  {translatedText}\n</span>\n\n<style>\n  span {\n    display: contents;\n  }\n</style>\n","<script lang=\"ts\">\n  import { onMount } from \"svelte\";\n  import type { Form } from \"../../gas/types\";\n  import T from \"./T.svelte\";\n\n  export let translations = {}; // { es: {...}, km: {...}, pt: {...} }\n  export let sourceLanguage = \"en\"; // Default source language\n  export let onChange: (lang: string, useGoogle: boolean) => void;\n  export let form: Form;\n\n  let selectedLang = sourceLanguage;\n  let useGoogleTranslate = false;\n  let googleTranslateIsReady = false;\n  let showAllLanguages = false;\n\n  function googleTranslateElementInit() {\n    new google.translate.TranslateElement(\n      { pageLanguage: sourceLanguage },\n      \"google_translate_element\"\n    );\n  }\n  function googleTranslateLoaded() {\n    googleTranslateIsReady = true;\n  }\n\n  function detectGoogleTranslateLanguage(hash: string) {\n    let match = hash.match(/googtrans\\((\\w+)\\|(\\w+)\\)/);\n    if (match) {\n      selectedLang = match[2];\n      useGoogleTranslate = true;\n    }\n  }\n\n  onMount(() => {\n    detectGoogleTranslateLanguage(window.location.hash);\n    window.googleTranslateLoaded = googleTranslateLoaded;\n    window.addEventListener(\"hashchange\", () => {\n      detectGoogleTranslateLanguage(window.location.hash);\n    });\n  });\n\n  function setLanguage(lang: string) {\n    selectedLang = lang;\n    let useGoogle = sourceLanguage !== lang && !hasCompleteTranslations(lang);\n    useGoogleTranslate = useGoogle;\n\n    if (useGoogle) {\n      triggerGoogleTranslate(lang);\n    } else {\n      window.location.hash = \"\";\n    }\n  }\n\n  function triggerGoogleTranslate(lang: string) {\n    window.location.hash = `#googtrans(${sourceLanguage}|${lang})`;\n    location.reload();\n  }\n\n  function hasCompleteTranslations(lang: string) {\n    let translation = translations[lang];\n    if (!translation) return false;\n    if (form.title && !translation[form.title]) return false;\n    if (form.description && !translation[form.description]) return false;\n    for (let item of form.items) {\n      if (!translation[item.title]) return false;\n      if (item.description && !translation[item.description]) return false;\n      if (item.choices) {\n        for (let choice of item.choices) {\n          if (!translation[choice]) return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  $: if ((useGoogleTranslate || showAllLanguages) && googleTranslateIsReady) {\n    googleTranslateElementInit();\n  }\n\n  $: onChange(selectedLang, useGoogleTranslate);\n</script>\n\n<svelte:head>\n  <script\n    src=\"https://translate.google.com/translate_a/element.js?cb=googleTranslateLoaded\"\n  ></script>\n</svelte:head>\n\n<div class=\"translation-container\">\n  <div class=\"button-group\">\n    {#if selectedLang !== sourceLanguage}\n      {@const langName = new Intl.DisplayNames([sourceLanguage], {\n        type: \"language\",\n      }).of(sourceLanguage)}\n      <button\n        on:click={() => setLanguage(sourceLanguage)}\n        class=\"lang-button primary\"\n      >\n        <T lang={selectedLang} {translations} text={langName} />\n      </button>\n    {/if}\n\n    {#each Object.keys(translations) as lang}\n      {@const langName = new Intl.DisplayNames([lang], { type: \"language\" }).of(\n        lang\n      )}\n      <button on:click={() => setLanguage(lang)} class=\"lang-button primary\">\n        {langName}\n      </button>\n    {/each}\n\n    <!-- Toggle Google Translate -->\n    <button\n      on:click={() => {\n        setLanguage(sourceLanguage);\n        showAllLanguages = !showAllLanguages;\n      }}\n      class=\"lang-button secondary\"\n    >\n      {#if Object.keys(translations).length}\n        <T lang={selectedLang} {translations} text=\"Other Languages\" />\n      {:else}\n        <T lang={selectedLang} {translations} text=\"Translate\" />\n      {/if}\n    </button>\n  </div>\n</div>\n\n<!-- Google Translate Element -->\n<div\n  class=\"google-translate-container\"\n  class:hidden={!showAllLanguages}\n  id=\"google_translate_element\"\n></div>\n\n<style>\n  .translation-container {\n    margin-top: 1rem;\n  }\n\n  .button-group {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n  }\n\n  .lang-button {\n    padding: 0.5rem 1rem;\n    font-size: 0.875rem;\n    border: none;\n    border-radius: 6px;\n    cursor: pointer;\n    transition:\n      background 0.2s ease-in-out,\n      transform 0.1s ease-in-out;\n    text-transform: capitalize;\n  }\n\n  .lang-button.primary {\n    background-color: var(--primary-color, #2563eb);\n    color: white;\n  }\n\n  .lang-button.primary:hover {\n    background-color: var(--primary-dark, #1d4ed8);\n    transform: scale(1.05);\n  }\n\n  .lang-button.secondary {\n    background-color: var(--text-color, #6b7280);\n    color: white;\n  }\n\n  .lang-button.secondary:hover {\n    background-color: var(--muted-text, #4b5563);\n    transform: scale(1.05);\n  }\n\n  .google-translate-container {\n    margin-top: 1rem;\n  }\n\n  .hidden {\n    display: none;\n  }\n</style>\n","<script lang=\"ts\">\n  export let max: number = 5;\n  export let icon: \"THUMBS_UP\" | \"HEART\" | \"STAR\" = \"STAR\";\n  export let value: number = 0;\n  export let name: string = \"rating\";\n\n  const iconMap = {\n    STAR: \"⭐\",\n    HEART: \"❤️\",\n    THUMBS_UP: \"👍\",\n  };\n</script>\n\n<div class=\"flex space-x-1\">\n  {#each Array(max).fill(0) as _, i}\n    <label\n      class=\"cursor-pointer relative\"\n      class:selected={value > i}\n      class:unselected={value <= i}\n    >\n      <input\n        type=\"radio\"\n        {name}\n        value={i + 1}\n        bind:group={value}\n        class=\"sr-only peer\"\n        on:input\n      />\n      <span\n        class=\"text-2xl transition-transform duration-200 ease-in-out\"\n        aria-hidden=\"true\"\n      >\n        {iconMap[icon]}\n      </span>\n    </label>\n  {/each}\n</div>\n\n<style>\n  /* Hide radio inputs but keep them accessible */\n  .sr-only {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border-width: 0;\n  }\n\n  /* Default size */\n  span {\n    display: inline-block;\n    transform: scale(0.5);\n    transition: transform 200ms;\n  }\n\n  /* Selected items stay full size */\n  .selected span {\n    transform: scale(1);\n  }\n\n  /* When hovering, grow all items to the left */\n  label:hover span,\n  .unselected:has(~ label:hover span) {\n    transform: scale(1.1);\n  }\n\n  /* When hovering, shrink all selected items to the right */\n  label:hover ~ label.selected {\n    transform: scale(0.75);\n  }\n\n  /* Ensure keyboard focus is visible */\n  .peer:focus-visible + span {\n    outline: 2px solid #4f46e5;\n    outline-offset: 2px;\n  }\n</style>\n","<script lang=\"ts\">\n  import type {\n    StandardFormItem,\n    ChoiceFormItem,\n    Translations,\n  } from \"./../../gas/types.ts\";\n  import RatingItem from \"./components/RatingItem.svelte\";\n\n  export let item: StandardFormItem;\n  export let onInputChange: (id: string, value: any) => void;\n  export let setChoice: (item: ChoiceFormItem, idx: number) => void;\n  export let lang = \"en\";\n  export let translations: Translations = {};\n  import { getRowIdentifier } from \"../../util\";\n  import T from \"./T.svelte\";\n\n  function handleChange(event) {\n    onInputChange(item.id, event.target.value);\n  }\n</script>\n\n<div class=\"form-item\">\n  <!-- Question Title -->\n  <h3 class=\"question-title\">\n    <T text={item.title} {lang} {translations} />\n  </h3>\n\n  <!-- Question Description -->\n  {#if item.description}\n    <p class=\"question-description\">\n      <T text={item.description} {lang} {translations} />\n    </p>\n  {/if}\n\n  <!-- Checkbox Inputs -->\n  {#if item.type === \"checkbox\"}\n    <div class=\"checkbox-group\">\n      {#each item.choices as choice}\n        <label class=\"checkbox-label\">\n          <input\n            type=\"checkbox\"\n            name={item.id}\n            value={choice}\n            class=\"checkbox-input\"\n            on:change={handleChange}\n          />\n          <span class=\"choice-text\">\n            <T text={choice} {lang} {translations} />\n          </span>\n        </label>\n      {/each}\n    </div>\n\n    <!-- Radio Inputs -->\n  {:else if item.type === \"multipleChoice\"}\n    <div class=\"radio-group\">\n      {#each item.choices as choice, idx}\n        <label class=\"radio-label\">\n          <input\n            type=\"radio\"\n            name={item.id}\n            value={choice}\n            class=\"radio-input\"\n            on:change={(event) => {\n              handleChange(event);\n              setChoice(item, idx);\n            }}\n          />\n          <span class=\"choice-text\">\n            <T text={choice} {lang} {translations} />\n          </span>\n        </label>\n      {/each}\n    </div>\n\n    <!-- Text Input -->\n  {:else if item.type === \"text\"}\n    <input\n      type=\"text\"\n      name={item.id}\n      class=\"input-field\"\n      on:input={handleChange}\n    />\n\n    <!-- Paragraph (Textarea) -->\n  {:else if item.type === \"paragraph\"}\n    <textarea\n      name={item.id}\n      class=\"input-field textarea-field\"\n      on:input={handleChange}\n    ></textarea>\n\n    <!-- Rating Item -->\n  {:else if item.type == \"rating\"}\n    <RatingItem\n      name={item.id}\n      icon={item.icon}\n      max={item.max}\n      on:input={handleChange}\n    />\n\n    <!-- Scale Input -->\n  {:else if item.type == \"scale\"}\n    <input\n      type=\"range\"\n      name={item.id}\n      min={item.min}\n      max={item.max}\n      step={item.step}\n      class=\"input-range\"\n      on:input={handleChange}\n      on:change={handleChange}\n    />\n\n    <!-- Dropdown List -->\n  {:else if item.type == \"list\"}\n    <select name={item.id} class=\"dropdown\" on:change={handleChange}>\n      <option value=\"\">Select an option</option>\n      {#each item.choices as choice}\n        <option value={choice}>{choice}</option>\n      {/each}\n    </select>\n  {/if}\n</div>\n\n<style>\n  /* === Global Form Item Styles === */\n  .form-item {\n    margin-bottom: 1.5rem;\n  }\n\n  .question-title {\n    font-size: 1.125rem;\n    font-weight: 600;\n    color: var(--text-color, #1f2937);\n    margin-bottom: 0.5rem;\n  }\n\n  .question-description {\n    font-size: 0.875rem;\n    color: var(--muted-text, #6b7280);\n    margin-bottom: 0.75rem;\n  }\n\n  /* === Checkbox & Radio Group Styles === */\n  .checkbox-group,\n  .radio-group {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .checkbox-label,\n  .radio-label {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    cursor: pointer;\n  }\n\n  .choice-text {\n    color: var(--text-color, #1f2937);\n  }\n\n  /* === Styled Checkboxes & Radio Buttons === */\n  .checkbox-input,\n  .radio-input {\n    width: 1.25rem;\n    height: 1.25rem;\n    border: 2px solid var(--input-border-color, #d1d5db);\n    border-radius: 50%;\n    cursor: pointer;\n    transition: transform 0.2s ease-in-out;\n  }\n\n  .checkbox-input:hover,\n  .radio-input:hover {\n    transform: scale(1.1);\n  }\n\n  .checkbox-input:checked,\n  .radio-input:checked {\n    background-color: var(--primary-color, #2563eb);\n    border-color: var(--primary-color, #2563eb);\n    box-shadow: 0 0 5px var(--primary-color, #2563eb);\n  }\n\n  /* === Text & Paragraph Input Styling === */\n  .input-field {\n    width: 100%;\n    padding: 0.6rem;\n    border: 1px solid var(--input-border-color, #d1d5db);\n    border-radius: 6px;\n    background-color: var(--input-bg-color, #f9fafb);\n    color: var(--input-text-color, #111827);\n    font-family: var(--input-font, sans-serif);\n    transition: all 0.2s ease-in-out;\n  }\n\n  .input-field:focus {\n    outline: none;\n    border-color: var(--input-focus-color, #2563eb);\n    box-shadow: 0 0 6px var(--input-focus-color, #2563eb);\n  }\n\n  .textarea-field {\n    min-height: 100px;\n    resize: vertical;\n  }\n\n  /* === Range Input Styling === */\n  .input-range {\n    width: 100%;\n    padding: 0.5rem;\n    border: none;\n    cursor: pointer;\n  }\n\n  /* === Dropdown Select === */\n  .dropdown {\n    width: 100%;\n    padding: 0.6rem;\n    border: 1px solid var(--input-border-color, #d1d5db);\n    border-radius: 6px;\n    background-color: var(--input-bg-color, #f9fafb);\n    color: var(--input-text-color, #111827);\n    font-family: var(--input-font, sans-serif);\n    appearance: none;\n  }\n\n  .dropdown:focus {\n    outline: none;\n    border-color: var(--input-focus-color, #2563eb);\n    box-shadow: 0 0 6px var(--input-focus-color, #2563eb);\n  }\n\n  /* === Hover & Focus Effects === */\n  .input-field:hover,\n  .dropdown:hover {\n    border-color: var(--primary-dark, #1d4ed8);\n  }\n\n  .input-field:focus,\n  .dropdown:focus {\n    border-color: var(--primary-color, #2563eb);\n  }\n</style>\n","<script lang=\"ts\">\n  import { getText } from \"./translate.ts\";\n  import type { StandardFormItem, ChoiceFormItem } from \"./../../gas/types.ts\";\n  import type { Page } from \"./types\";\n  import GFormItem from \"./GFormItem.svelte\";\n  import T from \"./T.svelte\";\n\n  export let page: Page;\n  export let isActive = false;\n  export let isFirst = false;\n  export let isSubmitting = false;\n  export let onBack: () => void;\n  export let onGoto: (id: string) => void;\n  export let lang = \"en\";\n  export let translations = {};\n\n  let nextPageId = page.defaultNextPage;\n  let formState: Record<string, any> = {}; // Stores form values\n  let formErrors: Record<string, string> = {}; // Tracks validation errors\n\n  function setChoice(item: ChoiceFormItem, idx: number) {\n    if (!item.choicesNavigation) return;\n    if (!item.choicesNavigation[idx]) return;\n    nextPageId =\n      item.choicesNavigation[idx].type === \"page\"\n        ? item.choicesNavigation[idx].id\n        : \"submit\";\n  }\n\n  function onInputChange(id: string, value: any) {\n    formState[id] = value;\n    formErrors[id] = \"\"; // Clear previous error\n  }\n\n  function validatePage(): boolean {\n    let isValid = true;\n    formErrors = {}; // Reset errors\n\n    for (let item of page.items) {\n      if (\n        item.required &&\n        (!formState[item.id] || formState[item.id].length === 0)\n      ) {\n        formErrors[item.id] = getText(\n          \"This field is required.\",\n          translations,\n          lang\n        );\n        isValid = false;\n      }\n    }\n\n    return isValid;\n  }\n\n  function handleNext() {\n    if (!validatePage()) {\n      console.log(\"Validation failed\", formErrors);\n      return;\n    }\n    onGoto(nextPageId);\n  }\n</script>\n\n<!-- Page Wrapper -->\n<div class=\"page-container\" class:hidden={!isActive}>\n  <!-- Page Title -->\n  {#if page.title}\n    <h2 class=\"page-title\">{page.title}</h2>\n  {/if}\n\n  <!-- Page Description -->\n  {#if page.description}\n    <p class=\"page-description\">\n      <T text={page.description} {lang} {translations} />\n    </p>\n  {/if}\n\n  <!-- Form Items -->\n  {#each page.items as item}\n    <GFormItem {item} {onInputChange} {setChoice} {lang} {translations} />\n    {#if formErrors[item.id]}\n      <p class=\"error-message\">\n        {formErrors[item.id]}\n      </p>\n    {/if}\n  {/each}\n\n  <!-- Navigation Buttons -->\n  <div class=\"nav-buttons\">\n    {#if !isFirst}\n      <button on:click|preventDefault={onBack} class=\"nav-button back-button\">\n        <T text=\"Back\" {lang} {translations} />\n      </button>\n    {:else}\n      <div></div>\n    {/if}\n\n    <button\n      on:click|preventDefault={handleNext}\n      class=\"nav-button next-button\"\n      disabled={isSubmitting}\n    >\n      {#if isSubmitting}\n        <T text=\"Submitting\" {lang} {translations} />\n      {:else if nextPageId === \"submit\"}\n        <T text=\"Submit\" {lang} {translations} />\n      {:else}\n        <T text=\"Next\" {lang} {translations} />\n      {/if}\n    </button>\n  </div>\n</div>\n\n<style>\n  /* === Page Container === */\n  .page-container {\n    max-width: 42rem;\n    margin: 0 auto;\n    padding: 1.5rem;\n    background-color: var(--bg-color, #ffffff);\n    color: var(--text-color, #1f2937);\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    border-radius: 8px;\n    transition: opacity 0.3s ease-in-out;\n  }\n\n  .page-title {\n    font-size: 1.5rem;\n    font-weight: 600;\n    color: var(--text-color, #1f2937);\n    margin-bottom: 0.75rem;\n  }\n\n  .page-description {\n    font-size: 0.875rem;\n    color: var(--muted-text, #6b7280);\n    margin-bottom: 1rem;\n  }\n\n  /* === Error Message Styling === */\n  .error-message {\n    background-color: var(--error-bg, #fef2f2);\n    border: 1px solid var(--error-color, #dc2626);\n    color: var(--error-color, #dc2626);\n    padding: 0.5rem;\n    border-radius: 6px;\n    font-size: 0.875rem;\n    margin-top: 0.5rem;\n  }\n\n  /* === Navigation Buttons === */\n  .nav-buttons {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 1.5rem;\n  }\n\n  .nav-button {\n    padding: 0.5rem 1rem;\n    border-radius: 6px;\n    font-weight: 500;\n    font-size: 1rem;\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n    border: none;\n    outline: none;\n  }\n\n  .back-button {\n    background-color: var(--muted-bg, #e5e7eb);\n    color: var(--text-color, #1f2937);\n  }\n\n  .back-button:hover {\n    background-color: var(--muted-hover, #d1d5db);\n  }\n\n  .next-button {\n    background-color: var(--primary-color, #2563eb);\n    color: #ffffff;\n  }\n\n  .next-button:hover {\n    background-color: var(--primary-dark, #1d4ed8);\n  }\n\n  .next-button:disabled {\n    background-color: var(--disabled-bg, #9ca3af);\n    cursor: not-allowed;\n  }\n\n  /* === Focus & Active States === */\n  .nav-button:focus {\n    outline: 2px solid var(--input-focus-color, #2563eb);\n    outline-offset: 2px;\n  }\n  .hidden {\n    visibility: hidden;\n  }\n</style>\n","<script lang=\"ts\">\n  import TranslationSelector from \"./TranslationSelector.svelte\";\n  import GPage from \"./GPage.svelte\";\n  import T from \"./T.svelte\";\n  import type { Form, Translations } from \"./../../gas/types.ts\";\n  import type { Page } from \"./types\";\n\n  export let form: Form;\n  export let translations: Translations = {};\n  export let postUrl: string = \"\";\n  export let allowPostAgain = true;\n  export let postAgainText = \"Submit another response\";\n\n  let pages: Page[] = [];\n  let submitting = false;\n  let submitted = false;\n  let submissionError = \"\";\n  let editResponseUrl = \"\";\n  let currentPageId: string;\n  let pageHistory: string[] = [];\n\n  $: pages = parsePages(form);\n  $: nextPageId =\n    pages.find((page) => page.id === currentPageId)?.defaultNextPage ||\n    \"submit\";\n\n  function parsePages(form: Form): Page[] {\n    if (!form) return [];\n    const pages: Page[] = [];\n    let currentPage: Page = {\n      id: \"start\",\n      description: form.description,\n      items: [],\n    };\n\n    for (const item of form.items) {\n      if (item.type === \"pageBreak\") {\n        pages.push(currentPage);\n        currentPage = { id: item.id, items: [], title: item.title };\n      } else {\n        currentPage.items.push(item);\n      }\n    }\n    if (currentPage.items.length > 0) pages.push(currentPage);\n    for (let i = 0; i < pages.length - 1; i++) {\n      if (!pages[i].defaultNextPage) pages[i].defaultNextPage = pages[i + 1].id;\n    }\n    pages[pages.length - 1].defaultNextPage = \"submit\";\n    currentPageId = pages[0].id;\n    return pages;\n  }\n\n  function goBack() {\n    if (pageHistory.length > 0) {\n      currentPageId = pageHistory.pop();\n    }\n  }\n\n  async function submitForm() {\n    submitting = true;\n    submissionError = \"\";\n    let formData = new FormData(theFormElement);\n    const uuid = crypto.randomUUID();\n    let formJson = { id: form.id, items: Object.fromEntries(formData), uuid };\n\n    try {\n      await fetch(postUrl, {\n        method: \"POST\",\n        mode: \"no-cors\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(formJson),\n      });\n    } catch (error) {\n      console.warn(\"Expected CORS error, ignoring:\", error);\n    }\n    console.log(\"Submitted data... polling for response: \", uuid);\n\n    let result = await pollForResponse(uuid);\n    console.log(\"Submitted form!\", result);\n    if (result.success) {\n      submitted = true;\n      editResponseUrl = result.editResponseUrl || \"\";\n    } else {\n      submissionError = \"Error submitting the form.\";\n    }\n\n    submitting = false;\n  }\n\n  async function pollForResponse(uuid) {\n    for (let i = 0; i < 10; i++) {\n      let response = await fetch(`${postUrl}?uuid=${uuid}`, { method: \"GET\" });\n      let data = await response.json();\n      if (data.success || data.error) return data;\n      await new Promise((r) => setTimeout(r, 1000));\n    }\n    return { success: false, error: \"Timeout waiting for response\" };\n  }\n\n  function nextPageOrSubmit(nextPageId: string) {\n    if (nextPageId === \"submit\") {\n      submitForm();\n    } else {\n      pageHistory.push(currentPageId);\n      currentPageId = nextPageId;\n    }\n  }\n\n  function resetForm() {\n    submitted = false;\n    submissionError = \"\";\n    editResponseUrl = \"\";\n    currentPageId = pages[0].id;\n    pageHistory = [];\n    theFormElement.reset();\n  }\n\n  let theFormElement: HTMLFormElement;\n  export let lang = \"en\";\n\n  function onLanguageChange(newLang: string) {\n    lang = newLang;\n  }\n</script>\n\n{#if form}\n  <main>\n    <TranslationSelector {translations} {form} onChange={onLanguageChange} />\n\n    <form\n      bind:this={theFormElement}\n      class=\"form-container\"\n      class:hidden={submitted}\n    >\n      <!-- Form Title -->\n      <h1 class=\"form-title\">\n        <T text={form.title} {lang} {translations} />\n      </h1>\n\n      <a class=\"form-link\" href={form.publishedUrl}>\n        (<T text=\"Complete in Google Forms\" {lang} {translations} />)\n      </a>\n\n      <!-- Pages -->\n      <div class=\"page-list\">\n        {#each pages as page}\n          <GPage\n            isFirst={pageHistory.length === 0}\n            isActive={currentPageId === page.id}\n            isSubmitting={submitting}\n            {page}\n            {lang}\n            {translations}\n            onBack={goBack}\n            onGoto={nextPageOrSubmit}\n          />\n        {/each}\n      </div>\n    </form>\n\n    {#if submissionError}\n      <div class=\"error-message\">\n        <T text={submissionError} {lang} {translations} />\n      </div>\n    {/if}\n\n    {#if submitted}\n      <div class=\"success-container\">\n        <h2 class=\"success-title\">Form submitted successfully!</h2>\n\n        {#if form.confirmationMessage}\n          <p>\n            <T text={form.confirmationMessage} {lang} {translations} />\n          </p>\n        {/if}\n\n        {#if editResponseUrl}\n          <p>\n            <a\n              class=\"edit-response-link\"\n              href={editResponseUrl}\n              target=\"_blank\"\n            >\n              <T\n                text=\"Edit your response in Google Forms\"\n                {lang}\n                {translations}\n              />\n            </a>\n          </p>\n        {/if}\n\n        {#if allowPostAgain}\n          <button on:click={resetForm} class=\"submit-again-button\">\n            <T text={postAgainText} {lang} {translations} />\n          </button>\n        {/if}\n      </div>\n    {/if}\n  </main>\n{/if}\n\n<style>\n  :host,\n  :root {\n    --primary-color: #2563eb; /* Tailwind blue-600 */\n    --secondary-color: #9333ea; /* Purple-600 */\n    --success-color: #16a34a; /* Green-600 */\n    --error-color: #dc2626; /* Red-600 */\n    --primary-dark: color-mix(in srgb, var(--primary-color) 80%, black 20%);\n    --secondary-dark: color-mix(in srgb, var(--secondary-color) 80%, black 20%);\n\n    --bg-color: #ffffff; /* Form background */\n    --text-color: #1f2937; /* Dark gray text */\n    --muted-text: color-mix(in srgb, var(--text-color) 70%, white 30%);\n\n    /* Input-specific theming */\n    --input-bg-color: #f9fafb; /* Light gray */\n    --input-text-color: #111827; /* Black */\n    --input-border-color: #d1d5db; /* Gray-300 */\n    --input-focus-color: #2563eb; /* Blue-600 */\n    --input-placeholder-color: #9ca3af; /* Gray-400 */\n\n    --font-family: \"Inter\", sans-serif;\n    --input-font: \"Inter\", sans-serif;\n  }\n\n  /* Dark Mode Theme */\n  :global([data-theme=\"dark\"]) {\n    --bg-color: #1f2937;\n    --text-color: #e5e7eb;\n    --muted-text: color-mix(in srgb, var(--text-color) 70%, black 30%);\n\n    --input-bg-color: #374151;\n    --input-text-color: #f3f4f6;\n    --input-border-color: #4b5563;\n    --input-focus-color: #60a5fa;\n  }\n\n  /* Transparent Mode */\n  :global([data-theme=\"transparent\"]) {\n    --bg-color: transparent;\n    --text-color: inherit;\n  }\n\n  .form-container {\n    background: var(--bg-color);\n    color: var(--text-color);\n    font-family: var(--font-family);\n    padding: 1.5rem;\n    border-radius: 8px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  }\n\n  .form-title {\n    font-size: 1.75rem;\n    font-weight: 600;\n    color: var(--primary-color);\n  }\n\n  .form-link {\n    color: var(--primary-color);\n    font-size: 0.875rem;\n    text-decoration: underline;\n    cursor: pointer;\n  }\n\n  .page-list {\n    margin-top: 1rem;\n  }\n\n  .error-message {\n    background: #fde2e2;\n    border: 1px solid var(--error-color);\n    padding: 0.75rem;\n    color: var(--error-color);\n    border-radius: 6px;\n    margin-top: 1rem;\n  }\n\n  .success-container {\n    text-align: center;\n    padding: 1.5rem;\n    border: 1px solid var(--text-color);\n    border-radius: 8px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  }\n\n  .success-title {\n    font-size: 1.5rem;\n    font-weight: 600;\n    color: var(--success-color);\n  }\n\n  .edit-response-link {\n    color: var(--secondary-color);\n    text-decoration: underline;\n    margin-top: 0.5rem;\n  }\n\n  .submit-again-button {\n    background: var(--primary-color);\n    color: white;\n    padding: 0.75rem 1.5rem;\n    border-radius: 6px;\n    cursor: pointer;\n    margin-top: 1rem;\n  }\n\n  .submit-again-button:hover {\n    background: var(--secondary-color);\n  }\n  main {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n  .hidden {\n    visibility: hidden;\n    display: none;\n  }\n</style>\n","<svelte:options\n  customElement=\"gforms-mirror\"\n  tag=\"gforms-mirror\"\n  immutable={true}\n/>\n\n<script lang=\"ts\">\n  import { onMount } from \"svelte\";\n  import type { Form, Translations } from \"../../gas/types\";\n  import GForm from \"./GForm.svelte\";\n  export let formsUrl: string = \"\";\n  export let formsId: string = \"\";\n  export let appsScriptUrl: string = \"\";\n  export let translations: Translations = {};\n  export let data: Form;\n\n  async function loadForm() {\n    try {\n      loading = true;\n      console.log(\"Loading form from URL\", formsUrl);\n\n      // Construct the API request URL based on formId or formsUrl\n      var fetchUrl = formsId\n        ? `${appsScriptUrl}?getFormData=1&formId=${encodeURIComponent(formsId)}`\n        : `${appsScriptUrl}?getFormData=1&formUrl=${encodeURIComponent(formsUrl)}`;\n\n      const response = await fetch(fetchUrl, {\n        method: \"GET\",\n        redirect: \"follow\", // ✅ Ensures it follows redirects\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to load form: ${response.statusText}`);\n      }\n\n      data = await response.json(); // ✅ Parse JSON response\n      console.log(\"Form Data Loaded:\", data);\n    } catch (error) {\n      console.error(\"Error loading form from URL\", fetchUrl, error);\n    } finally {\n      loading = false;\n    }\n    let translationsUrl = `${appsScriptUrl}?translations=1`;\n    if (formsId) {\n      translationsUrl += `&formId=${encodeURIComponent(formsId)}`;\n    } else {\n      translationsUrl += `&formUrl=${encodeURIComponent(formsUrl)}`;\n    }\n\n    loading = true;\n    try {\n      console.log(\"Fetch transalations from\", translationsUrl);\n      const response = await fetch(translationsUrl, {\n        method: \"GET\",\n        redirect: \"follow\", // ✅ Ensures it follows redirects\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to load translations: ${response.statusText}`);\n      }\n\n      translations = await response.json(); // ✅ Parse JSON response\n      console.log(\"Translations Loaded:\", translations);\n    } catch (error) {\n      console.error(\n        \"Error loading translations from URL\",\n        translationsUrl,\n        error\n      );\n    }\n  }\n  let loading = false;\n\n  onMount(() => {\n    loadForm();\n  });\n</script>\n\n{#if data}\n  <GForm form={data} postUrl={appsScriptUrl} {translations} lang=\"en\" />\n{/if}\n{#if formsUrl}\n  <button\n    disabled={loading}\n    class=\"bg-primary hover:bg-primaryDark text-white font-bold py-2 px-4 rounded\"\n    on:click={loadForm}\n  >\n    &#x21bb; <!-- Unicode symbol for refresh arrow -->\n  </button>\n{/if}\n"],"names":["element","text","detach","instance","create_fragment","not_equal","append_styles","attr","ctx","create_if_block_1","create_if_block_3","create_if_block_5","create_if_block_4","create_if_block","form","pages","nextPageId"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}